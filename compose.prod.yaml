services:
  # "app" automatically becomes network alias
  app-backend:
    container_name: app-backend
    env_file:
      - .env
    image: pinkprotocol/arthive-app-backend:latest
    command: [ "sh", "-c", "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --reload" ] # TODO: consider using fastapi command
    ports:
      - "8000:8000"
    working_dir: /app
    # volumes:
    #   - ./backend:/app
    depends_on:
      postgres-db:
        condition: service_healthy # makes sure db is connected before webapp starts. Need to define health check
    environment:
      DATABASE_PASSWORD: /run/secrets/db_password
      DATABASE_HOSTNAME: postgres-db
    secrets:
      - db_password

  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD: /run/secrets/db_password
    ports:
      - "${DATABASE_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    secrets:
      - db_password

secrets:
  db_password:
    file: ./backend/db_password.txt

volumes:
  postgres-data:

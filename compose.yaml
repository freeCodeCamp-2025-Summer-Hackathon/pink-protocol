services:
  # "app" automatically becomes network alias
  app-backend:
    container_name: app-backend
    env_file:
      - .env
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: [ "sh", "-c", "alembic upgrade head && fastapi run --host 0.0.0.0" ]
    ports:
      - "8000:8000"
    working_dir: /app
    volumes:
      - ./backend:/app
    depends_on:
      postgres-db:
        condition: service_healthy
    environment:
      DATABASE_PASSWORD: /run/secrets/db_password
      DATABASE_HOSTNAME: postgres-db
    secrets:
      - db_password

  app-frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_BACKEND_URL=${VITE_BACKEND_URL}

  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD: /run/secrets/db_password
    ports:
      - "${DATABASE_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    secrets:
      - db_password

  seed:
    build: ./backend
    command: python scripts/seed.py
    env_file:
    - .env
    working_dir: /app
    depends_on:
      postgres-db:
        condition: service_healthy
      app-backend:
        condition: service_started
    environment:
      DATABASE_PASSWORD: /run/secrets/db_password
      DATABASE_HOSTNAME: postgres-db
    volumes:
      - ./backend:/app
    profiles:
      - seed

secrets:
  db_password:
    file: ./backend/db_password.txt

volumes:
    postgres-data:
